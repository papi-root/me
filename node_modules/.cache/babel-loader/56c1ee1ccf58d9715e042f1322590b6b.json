{"ast":null,"code":"import axios from 'axios';\nimport { setAlert } from './alert';\nimport { REGISTER_SUCCESS, REGISTER_FAIL, USER_LOADED, AUTH_ERROR } from './types';\nimport setAuthToken from '../utils/setAuthToken'; // Load User \n\nexport const loadUser = () => async dispatch => {\n  if (localStorage.token) {\n    setAuthToken(localStorage.token);\n  }\n\n  try {} catch (err) {}\n}; // Register User \n\nexport const register = ({\n  name,\n  email,\n  password\n}) => async dispatch => {\n  const config = {\n    headers: {\n      'Content-Type': 'application/json'\n    }\n  };\n  const body = JSON.stringify({\n    name,\n    email,\n    password\n  });\n\n  try {\n    const res = await axios.post('/api/users', body, config);\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};","map":{"version":3,"sources":["C:/Users/Papi/Desktop/Appli/Node React/client/src/actions/auth.js"],"names":["axios","setAlert","REGISTER_SUCCESS","REGISTER_FAIL","USER_LOADED","AUTH_ERROR","setAuthToken","loadUser","dispatch","localStorage","token","err","register","name","email","password","config","headers","body","JSON","stringify","res","post","type","payload","data","errors","response","forEach","error","msg"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,SAAzB;AACA,SACIC,gBADJ,EAEIC,aAFJ,EAGIC,WAHJ,EAIIC,UAJJ,QAKO,SALP;AAMA,OAAOC,YAAP,MAAyB,uBAAzB,C,CAEA;;AACA,OAAO,MAAMC,QAAQ,GAAG,MAAM,MAAMC,QAAN,IAAkB;AAC5C,MAAGC,YAAY,CAACC,KAAhB,EAAuB;AACnBJ,IAAAA,YAAY,CAACG,YAAY,CAACC,KAAd,CAAZ;AACH;;AAED,MAAI,CAEH,CAFD,CAEE,OAAOC,GAAP,EAAY,CAEb;AACJ,CAVM,C,CAYP;;AAEA,OAAO,MAAMC,QAAQ,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,KAAR;AAAeC,EAAAA;AAAf,CAAD,KAA+B,MAAMP,QAAN,IAAkB;AACrE,QAAMQ,MAAM,GAAG;AACXC,IAAAA,OAAO,EAAE;AACL,sBAAgB;AADX;AADE,GAAf;AAMA,QAAMC,IAAI,GAAGC,IAAI,CAACC,SAAL,CAAe;AAAEP,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA;AAAf,GAAf,CAAb;;AAEA,MAAI;AACA,UAAMM,GAAG,GAAG,MAAMrB,KAAK,CAACsB,IAAN,CAAW,YAAX,EAAyBJ,IAAzB,EAA+BF,MAA/B,CAAlB;AAEAR,IAAAA,QAAQ,CAAC;AACLe,MAAAA,IAAI,EAAErB,gBADD;AAELsB,MAAAA,OAAO,EAAEH,GAAG,CAACI;AAFR,KAAD,CAAR;AAKH,GARD,CAQE,OAAOd,GAAP,EAAY;AAEV,UAAMe,MAAM,GAAGf,GAAG,CAACgB,QAAJ,CAAaF,IAAb,CAAkBC,MAAjC;;AAEA,QAAGA,MAAH,EAAW;AACPA,MAAAA,MAAM,CAACE,OAAP,CAAeC,KAAK,IAAIrB,QAAQ,CAACP,QAAQ,CAAC4B,KAAK,CAACC,GAAP,EAAY,QAAZ,CAAT,CAAhC;AACH;;AAEDtB,IAAAA,QAAQ,CAAC;AACLe,MAAAA,IAAI,EAAEpB;AADD,KAAD,CAAR;AAGH;AACJ,CA7BM","sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert'; \r\nimport {\r\n    REGISTER_SUCCESS, \r\n    REGISTER_FAIL,\r\n    USER_LOADED, \r\n    AUTH_ERROR\r\n} from './types'; \r\nimport setAuthToken from '../utils/setAuthToken'; \r\n\r\n// Load User \r\nexport const loadUser = () => async dispatch => {\r\n    if(localStorage.token) { \r\n        setAuthToken(localStorage.token); \r\n    } \r\n\r\n    try {\r\n        \r\n    } catch (err) {\r\n        \r\n    }\r\n}\r\n\r\n// Register User \r\n\r\nexport const register = ({ name, email, password }) => async dispatch => {\r\n    const config = {\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        }\r\n    } \r\n\r\n    const body = JSON.stringify({ name, email, password }); \r\n\r\n    try {\r\n        const res = await axios.post('/api/users', body, config); \r\n\r\n        dispatch({\r\n            type: REGISTER_SUCCESS,\r\n            payload: res.data \r\n        });  \r\n\r\n    } catch (err) { \r\n\r\n        const errors = err.response.data.errors; \r\n\r\n        if(errors) {\r\n            errors.forEach(error => dispatch(setAlert(error.msg, 'danger')));  \r\n        }\r\n\r\n        dispatch({\r\n            type: REGISTER_FAIL\r\n        }); \r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}